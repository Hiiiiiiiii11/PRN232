@page "/MyPrograms"
@model DrugUserPreventionUI.Pages.MyPrograms.MyProgramsModel
@{
    ViewData["Title"] = "Chương trình đã đăng ký";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0 text-gray-800">
                <i class="fas fa-project-diagram text-primary me-2"></i>
                Chương trình đã đăng ký
            </h1>
            <p class="text-muted mb-0">Quản lý các chương trình phòng chống tệ nạn xã hội bạn đã tham gia</p>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>
            @Model.SuccessMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            @Model.ErrorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Filter -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="get">
                <div class="row">
                    <div class="col-md-4">
                        <label class="form-label">Tìm kiếm</label>
                        <input type="text" class="form-control" name="search" value="@Model.FilterForm.SearchKeyword" placeholder="Tên chương trình...">
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Trạng thái tham gia</label>
                        <select class="form-select" name="status">
                            <option value="">Tất cả</option>
                            <option value="Active" selected="@(Model.FilterForm.Status == "Active")">Đang tham gia</option>
                            <option value="Completed" selected="@(Model.FilterForm.Status == "Completed")">Đã hoàn thành</option>
                            <option value="Cancelled" selected="@(Model.FilterForm.Status == "Cancelled")">Đã hủy</option>
                        </select>
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary me-2">
                            <i class="fas fa-search me-1"></i>
                            Tìm kiếm
                        </button>
                        <a href="/MyPrograms" class="btn btn-outline-secondary">
                            <i class="fas fa-refresh me-1"></i>
                            Đặt lại
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Programs -->
    @if (Model.UserPrograms != null && Model.UserPrograms.Any())
    {
        <div class="row">
            @foreach (var program in Model.UserPrograms)
            {
                <div class="col-lg-6 col-xl-4 mb-4">
                    <div class="card h-100 shadow-sm border-0">
                        @if (!string.IsNullOrEmpty(program.ImageUrl))
                        {
                            <img src="@program.ImageUrl" class="card-img-top" style="height: 200px; object-fit: cover;" alt="@program.ProgramName">
                        }
                        else
                        {
                            <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                <i class="fas fa-project-diagram fa-3x text-muted"></i>
                            </div>
                        }

                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@program.ProgramName</h5>
                            <p class="card-text text-muted flex-grow-1">@program.Description</p>

                            <div class="program-info mb-3">
                                <div class="d-flex justify-content-between text-small mb-1">
                                    <span><i class="fas fa-calendar-alt me-1"></i>Bắt đầu: @program.StartDate.ToString("dd/MM/yyyy")</span>
                                    <span><i class="fas fa-calendar-check me-1"></i>Kết thúc: @program.EndDate.ToString("dd/MM/yyyy")</span>
                                </div>
                                <div class="d-flex justify-content-between text-small mb-2">
                                    <span><i class="fas fa-map-marker-alt me-1"></i>@program.Location</span>
                                    <span class="badge bg-info">Ngày tham gia: @program.ParticipatedAt.ToString("dd/MM/yyyy")</span>
                                </div>
                            </div>

                            <div class="card-actions mt-auto d-flex justify-content-between">
                                <a href="/Programs/@program.ProgramID" class="btn btn-primary btn-sm">
                                    <i class="fas fa-eye me-1"></i>
                                    Xem chi tiết
                                </a>

                                
                                
                                    <button type="button" class="btn btn-outline-danger btn-sm" onclick="cancelParticipation(@program.ProgramID)">
                                        <i class="fas fa-times me-1"></i>
                                        Hủy tham gia
                                    </button>
                                
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Program pagination">
                <ul class="pagination justify-content-center">
                    <li class="page-item @(Model.CurrentPage <= 1 ? "disabled" : "")">
                        <a class="page-link" href="?page=@(Model.CurrentPage - 1)&search=@Model.FilterForm.SearchKeyword&status=@Model.FilterForm.Status">Trước</a>
                    </li>

                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="?page=@i&search=@Model.FilterForm.SearchKeyword&status=@Model.FilterForm.Status">@i</a>
                        </li>
                    }

                    <li class="page-item @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" href="?page=@(Model.CurrentPage + 1)&search=@Model.FilterForm.SearchKeyword&status=@Model.FilterForm.Status">Sau</a>
                    </li>
                </ul>
            </nav>
        }
    }
    else
    {
        <div class="card">
            <div class="card-body text-center py-5">
                <i class="fas fa-project-diagram fa-4x text-muted mb-4"></i>
                <h4 class="text-muted">Tính năng đang được phát triển</h4>
                <p class="text-muted mb-4">Bạn chưa đăng ký chương trình nào. Hãy khám phá và tham gia các chương trình phù hợp!</p>
                <a href="/Programs" class="btn btn-primary">
                    <i class="fas fa-search me-2"></i>
                    Khám phá chương trình
                </a>
            </div>
        </div>
    }
</div>

<script>
    function cancelParticipation(programId) {
        if (confirm('Bạn có chắc chắn muốn hủy tham gia chương trình này?')) {
            fetch(`/api/Programs/${programId}/cancel-participation`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + getCookie('auth_token')
                }
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    location.reload();
                } else {
                    alert('Có lỗi xảy ra: ' + result.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi hủy tham gia chương trình');
            });
        }
    }

    function getCookie(name) {
        let cookieValue = null;
        if (document.cookie && document.cookie !== '') {
            const cookies = document.cookie.split(';');
            for (let i = 0; i < cookies.length; i++) {
                const cookie = cookies[i].trim();
                if (cookie.substring(0, name.length + 1) === (name + '=')) {
                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                    break;
                }
            }
        }
        return cookieValue;
    }
</script>
